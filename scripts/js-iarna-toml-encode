#!/usr/bin/env node

let fs                  = require('fs');
let toml                = require('./stringify.js')
let createDateTime      = require('./lib/create-datetime.js')
let createDateTimeFloat = require('./lib/create-datetime-float.js')
let createDate          = require('./lib/create-date.js')
let createTime          = require('./lib/create-time.js')

let convert = (v) => {
	if (typeof(v) === 'object' && v.constructor && v.constructor.name === 'Array')
		return v.map(convert)
	else if (v.type === undefined || v.value === undefined) {
		for (k in v)
			v[k] = convert(v[k])
		return v
	}

	switch (v.type) {
	case 'string':         return v.value
	case 'integer':        return BigInt(v.value)
	case 'float':          return parseFloat(v.value.replace('inf', 'Infinity'))
    case 'bool':           return v.value === 'true' ? true : false
	case 'datetime':       return createDateTime(v.value)
	case 'datetime-local': return createDateTimeFloat(v.value)
	case 'date-local':     return createDate(v.value)
	case 'time-local':     return createTime(v.value)
	default:               throw(`unknown type: ${v}`)
	}
}

let j = JSON.parse(fs.readFileSync(0, 'utf-8'))
for (k in j)
	j[k] = convert(j[k])
process.stdout.write(toml(j, {}))
