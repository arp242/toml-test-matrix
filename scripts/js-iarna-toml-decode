#!/usr/bin/env node

let fs   = require('fs');
let toml = require('./parse-string.js')

let convert = (v) => {
	switch (typeof(v)) {
	case 'string':  return {type: 'string',  value: v}
	case 'bigint':  return {type: 'integer', value: v.toString()}
	case 'number':  return {type: 'float',   value: v.toString()}
	case 'boolean': return {type: 'bool',    value: v.toString()}
	case 'object':
		switch (v.constructor.name) {
		case 'Object':
			for (k in v)
				v[k] = convert(v[k])
			return v
		case 'Date':             return {type: v.toISOString().length === 10 ? 'date-local' : 'datetime', value: v.toISOString()}
		case 'FloatingDateTime': return {type: 'datetime-local',  value: v.toISOString()}
		case 'Time':             return {type: 'time-local',      value: v.toISOString()}
		case 'Array':            return v.map(convert)
		default:
			throw(`unknown type: ${v.constructor.name}`)
		}
	default:
		throw(`unknown type: ${typeof(v)}`)
	}
}

let t = toml(fs.readFileSync(0, 'utf-8'), {joiner: "\n"})
for (k in t)
	t[k] = convert(t[k])
process.stdout.write(JSON.stringify(t, null, 4) + "\n")
