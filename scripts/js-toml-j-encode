#!/usr/bin/env node

let fs   = require('fs');
let toml = require('./dist/NPM/index.js')

let convert = (v) => {
	if (typeof(v) === 'object' && v.constructor && v.constructor.name === 'Array')
		return v.map(convert)
	else if (v.type === undefined || v.value === undefined) {
		for (k in v)
			v[k] = convert(v[k])
		return v
	}

	switch (v.type) {
	case 'string':
		return v.value
	case 'integer':
		return BigInt(v.value)
	case 'float':
		return parseFloat(v.value.replace('inf', 'Infinity'))
    case 'bool':
		return v.value === 'true' ? true : false
	case 'datetime':
		return new toml.OffsetDateTime(v.value)
	case 'datetime-local':
		return new toml.LocalDateTime(v.value)
	case 'date-local':
		return new toml.LocalDate(v.value)
	case 'time-local':
		return new toml.LocalTime(v.value)
	default:
		throw(`unknown type: ${v}`)
	}
}

let j = JSON.parse(fs.readFileSync(0, 'utf-8'))
for (k in j)
	j[k] = convert(j[k])
process.stdout.write(toml.stringify(j, {}).join('\n'))
