#!/usr/bin/env python

import datetime, json, sys, tomlkit

def convert(v):
    t = type(v)
    if t is tomlkit.items.Integer:
        return {'type': 'integer', 'value': f'{v}'}
    elif t is tomlkit.items.Float:
        return {'type': 'float', 'value': f'{v}'}
    elif t is tomlkit.items.String:
        return {'type': 'string', 'value': v}
    elif t is bool:
        return {'type': 'bool', 'value': f'{v}'}
    elif t in [tomlkit.items.Array, tomlkit.items.AoT]:
        return [convert(vv) for vv in v]
    elif t in [tomlkit.items.InlineTable, tomlkit.items.Table, tomlkit.container.OutOfOrderTableProxy]:
        return {k: convert(vv) for (k, vv) in v.items()}
    elif t is tomlkit.items.DateTime:
        return {'type': f'datetime{"-local" if v.tzinfo is None else ""}', 'value': f'{v}'}
    elif t is tomlkit.items.Date:
        return {'type': 'date-local', 'value': f'{v}'}
    elif t is tomlkit.items.Time:
        return {'type': 'time-local', 'value': f'{v}'}
    else:
        raise Exception(f'unknown type: {t}')

t = tomlkit.loads(sys.stdin.read())
print(json.dumps({k: convert(v) for (k, v) in t.items()}))
